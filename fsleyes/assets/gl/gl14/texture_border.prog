# This routine replaces the value from a texture lookup if the texture
# coordinates were out of bounds (less than 0 or greater than 1).
#
# Inputs:
#   texCoord   - 3D texture coordinates
#   origval    - X component contains the value that was retrieved
#                from the texture lookup.
#   borderval  - X component contains the value to use if the coordinates
#                are out of bounds.
#
# Result:
#   out_result - X component will contain the origval if the texture coords
#                are in bounds, or borderval if they're out of bounds.

# Throughout the routine, we use
# result.xyz to process texture
# coordinates, and result.w to
# store the output value. At the
# end, the final result will be
# accumulated into result.x.


MOV {{ out_result }}.w,   {{ origval  }}.x;
MOV {{ out_result }}.xyz, {{ texCoord }};

# Clobber the texture value if the tex
# coords on any dimension are less than 0.
CMP {{ out_result }}.w, {{ texCoord }}.x, {{ borderval }}.x, {{ out_result }}.w;
CMP {{ out_result }}.w, {{ texCoord }}.y, {{ borderval }}.x, {{ out_result }}.w;
CMP {{ out_result }}.w, {{ texCoord }}.z, {{ borderval }}.x, {{ out_result }}.w;

# Test if the tex coords on any
# dimension are greater than 1
SUB {{ out_result }}.xyz, 1, {{ texCoord }};

# Put the final result from
# both tests into result.x
CMP {{ out_result }}.w, {{ out_result }}.x, {{ borderval }}.x, {{ out_result }}.w;
CMP {{ out_result }}.w, {{ out_result }}.y, {{ borderval }}.x, {{ out_result }}.w;
CMP {{ out_result }}.x, {{ out_result }}.z, {{ borderval }}.x, {{ out_result }}.w;
